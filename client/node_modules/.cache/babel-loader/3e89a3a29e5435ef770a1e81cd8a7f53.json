{"ast":null,"code":"var _jsxFileName = \"/home/ryan/LambdaProjects/Unit3/web-sprint-challenge-advanced-web-applications/client/src/routes/PrivateRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = localStorage.getItem('token');\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (token) {\n        return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/ryan/LambdaProjects/Unit3/web-sprint-challenge-advanced-web-applications/client/src/routes/PrivateRoute.js"],"names":["React","Component","Route","Redirect","PrivateRoute","component","rest","token","localStorage","getItem","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEJ,SAAZ;AAAuB,KAAGK;AAA1B,CAAD,KAAqC;AACtD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,SACI,oBAAC,KAAD,oBACQH,IADR;AAEI,IAAA,MAAM,EAAEI,KAAK,IAAI;AACb,UAAGH,KAAH,EAAS;AACL,eAAO,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFD,MAEK;AACD,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAfD;;AAiBA,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const token = localStorage.getItem('token');\n\n    return(\n        <Route\n            {...rest}\n            render={props => {\n                if(token){\n                    return <Component {...props}/>;\n                }else{\n                    return <Redirect to='/login' />;\n                }\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;\n\n"]},"metadata":{},"sourceType":"module"}