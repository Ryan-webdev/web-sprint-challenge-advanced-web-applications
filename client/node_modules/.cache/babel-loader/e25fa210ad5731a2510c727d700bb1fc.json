{"ast":null,"code":"var _jsxFileName = \"/home/ryan/LambdaProjects/Unit3/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const {\n    push\n  } = useHistory();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n\n  const changeHandler = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }; // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n\n\n  const loginHandler = e => {\n    e.preventDefault();\n    axiosWithAuth().post('/login', credentials).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      props.push('/protected');\n    }).catch(err => console.log({\n      err\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Welcome to the Bubble App!\"), React.createElement(\"form\", {\n    onSubmit: loginHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: credentials.username,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"text\",\n    placeholder: \"Password\",\n    value: credentials.password,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/ryan/LambdaProjects/Unit3/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js"],"names":["React","useState","axiosWithAuth","Redirect","useHistory","Login","push","credentials","setCredentials","username","password","changeHandler","e","target","name","value","loginHandler","preventDefault","post","then","res","localStorage","setItem","data","payload","props","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAACC,IAAAA;AAAD,MAASF,UAAU,EAAzB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAA+BP,QAAQ,CAAC;AAC5CQ,IAAAA,QAAQ,EAAE,EADkC;AAE5CC,IAAAA,QAAQ,EAAE;AAFkC,GAAD,CAA7C;;AAIA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzBJ,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFb,KAAD,CAAd;AAID,GALD,CANkB,CAYlB;AACA;;;AACA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAf,IAAAA,aAAa,GACZgB,IADD,CACM,QADN,EACgBX,WADhB,EAECY,IAFD,CAEMC,GAAG,IAAI;AACXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,OAAvC;AACAC,MAAAA,KAAK,CAACnB,IAAN,CAAW,YAAX;AACD,KALD,EAMCoB,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ,CANd;AAOD,GATD;;AAUA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAET,WAAW,CAACE,QAJrB;AAKE,IAAA,QAAQ,EAAEE,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEJ,WAAW,CAACG,QAJrB;AAKE,IAAA,QAAQ,EAAEC,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF,CAFF,CADF;AAsBD,CA9CD;;AAgDA,eAAeN,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const {push} = useHistory();\n  const [credentials, setCredentials]= useState({\n    username: '',\n    password: ''\n  });\n  const changeHandler = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }\n  // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n  const loginHandler = e => {\n    e.preventDefault();\n    axiosWithAuth()\n    .post('/login', credentials)\n    .then(res => {\n      localStorage.setItem('token', res.data.payload)\n      props.push('/protected');\n    })\n    .catch(err => console.log({err}))\n  }\n  return (\n    <>\n      <h1>Welcome to the Bubble App!</h1>\n      <form onSubmit={loginHandler}>\n        <input\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Username\"\n          value={credentials.username}\n          onChange={changeHandler}\n        />\n        <input\n          name=\"password\"\n          type=\"text\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={changeHandler}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}